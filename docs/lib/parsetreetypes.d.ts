type Program = any;
type Statement = any;
type ConstantDeclaration = any;
type FunctionDeclaration = any;
type ReturnStatement = Pair<"return_statement", Pair<any, null>>;
type WhileLoop = Pair<"while_loop", Pair<any, Pair<any, null>>>;
type ForLoop = Pair<"for_loop", Pair<any, Pair<any, Pair<any, Pair<any, null>>>>>;
type BreakStatement = Pair<"break_statement", null>;
type ContinueStatement = Pair<"continue_statement", null>;
type Parameters = List<Pair<"name", Pair<string, null>>>;
type ConditionalStatement = any;
type Block = any;
type VariableDeclaration = Pair<"variable_declaration", Pair<Pair<"name", Pair<string, null>>, Pair<any, null>>>;
type Assignment = any;
type ObjectAssignment = any;
type Expression = any;
type Literal = Pair<"literal", Pair<string | number | boolean | null, null>>;
type Name = Pair<"name", Pair<string, null>>;
type LogicalComposition = any;
type BinaryOperatorCombination = any;
type UnaryOperatorCombination = any;
type Application = any;
type LambdaExpression = any;
type ConditionalExpression = any;
type ObjectAccess = any;
type ArrayExpression = any;
type LogicalOperator = "&&" | "||";
type BinaryOperator = "/" | "+" | "-" | "*" | "%" | "===" | "!==" | "<" | ">" | "<=" | ">=";
type UnaryOperator = "!" | "-unary";
